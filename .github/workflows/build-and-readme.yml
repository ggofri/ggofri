name: Build and Update README

on:
  push:
    branches: [main]
  schedule:
    - cron: '0 6 * * *' # Daily at 6 AM UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Update blog posts section
        run: |
          # Create temporary files
          temp_file=$(mktemp)
          blog_content=$(mktemp)
          
          # Extract blog post metadata
          find src/content/blog -name "*.md" -o -name "*.mdx" | while read -r file; do
            if [[ -f "$file" ]]; then
              title=$(awk '/^title:/ {gsub(/^title: *["\047]?|["\047]? *$/, ""); print; exit}' "$file")
              pubDate=$(awk '/^pubDate:/ {gsub(/^pubDate: *["\047]?|["\047]? *$/, ""); print; exit}' "$file")
              filename=$(basename "$file" | sed 's/\.\(md\|mdx\)$//')
              
              if [[ -n "$title" && -n "$pubDate" ]]; then
                # Convert to sortable date format
                sortable_date=$(date -d "$pubDate" +%Y-%m-%d 2>/dev/null || echo "1970-01-01")
                echo "$sortable_date|$title|$filename|$pubDate" >> "$temp_file"
              fi
            fi
          done
          
          # Generate blog posts content
          sort -r -t'|' -k1,1 "$temp_file" | head -5 | while IFS='|' read -r _ title filename pubDate; do
            echo "- [$title](https://ggofri.github.io/blog/$filename) - $pubDate" >> "$blog_content"
          done
          
          # Update README.md between the blog_posts comments
          awk '
          /<!--START_SECTION:blog_posts-->/ { 
            print; 
            system("cat '"$blog_content"'"); 
            skip=1; 
            next 
          }
          /<!--END_SECTION:blog_posts-->/ { 
            skip=0 
          }
          !skip { print }
          ' README.md > README.tmp && mv README.tmp README.md
          
          rm -f "$temp_file" "$blog_content"

      - name: Update GitHub activity
        uses: jamesgeorge007/github-activity-readme@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check for changes
        id: verify-changed-files
        run: |
          if git diff --quiet HEAD -- README.md; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: steps.verify-changed-files.outputs.changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "docs: auto-update README with latest blog posts
          
          - Updated with 5 most recent blog posts
          - Sorted by publication date (newest first)"
          git push